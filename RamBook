import java.util.*;

public class RamBook
{
    //INSTANCE FIELD
    private ArrayList<User> allUsers;
    private ArrayList<Message> messages;
    private ArrayList<String> friends;

    //CONSTRUCTOR
    public RamBook() throws Exception
    {
        allUsers = new ArrayList<User>();
        friends = new ArrayList<String>();
        
        messages = new ArrayList<Message>();
        
        readUsers();
        
        doFriends();
        
        
    }//END CONSTRUCTOR
    
    
    // Prints out all the users
    public void printAllUsers()
    {
        for (User u : allUsers)
        {   
            System.out.println(u);
            System.out.println();
        }
    }//END printUsers
    
    public void writeUsers() {
        String users = "";
        for (User x : allUsers) {
            users += x.writeUser() + "\n";
        }
        WriteFile.write("RamBook.txt", users);
    }
    
    public void readUsers() throws Exception{
        ArrayList<String> lines = new ArrayList<String>();
        lines = ReadFile.read("RamBook.txt");
        
        for (String x : lines) {
            allUsers.add(readUser(x));
        }
    }
    
    public User readUser(String x) {
        String name = x.substring(0,x.indexOf(";"));
        x = x.substring(x.indexOf(";") + 1);
        String pw = x.substring(0,x.indexOf(";"));
        x = x.substring(x.indexOf(";") + 1);
        String desc = x.substring(0,x.indexOf(";"));
        x = x.substring(x.indexOf(";") + 1);
        int age = Integer.parseInt(x.substring(0,x.indexOf(";")));
        x = x.substring(x.indexOf(";") + 1);
        String hometown = x.substring(0,x.indexOf(";"));
        x = x.substring(x.indexOf(";") + 1);
        String[] schools = new String[3];
        for (int i = 0; i < 2; i++) {
            schools[i] = x.substring(0,x.indexOf(","));
            x = x.substring(x.indexOf(",") + 1);
        }
        schools[2] = x.substring(0,x.indexOf(";"));
        x = x.substring(x.indexOf(";") + 1);
        
        friends.add(x);
        return new User(name,pw,desc,age,hometown,schools);
    }
    
    public ArrayList<User> getUsers() {
        return allUsers;
    }
        
    public void setUsers(ArrayList<User> users) {
        allUsers = users;
    }
    
    public void readMessages() throws Exception {
        ArrayList<String> lines = new ArrayList<String>();
        lines = ReadFile.read("messages.txt");
        
        for (String l : lines) {
            String from = l.substring(0,l.indexOf(";"));
            l = l.substring(l.indexOf(";") + 1);
            String to = l.substring(0,l.indexOf(";"));
            l = l.substring(l.indexOf(";") + 1);
            String message = l;
            sendMessage(new Message(from,to,message));
        }
    }
    
    public void writeMessages() {
        String mess = "";
        for (Message m : messages) {
            mess += m.getFrom() + ";";
            mess += m.getTo() + ";";
            mess += m.getMessage();
            mess += "\n";
        }
        WriteFile.write("messages.txt",mess);
    }
    
    public boolean sendMessage(Message m) {
        for (User u : allUsers) {
            if (m.getTo().equals(u.getName())) {
                u.sendMessage(m);
                messages.add(m);
                return true;
            }
        }
        return false;
    }
    
    public void sendMessages() {
        for (Message m : messages) {
            for (User u : allUsers) {
                if (m.getTo().equals(u.getName())) {
                    u.sendMessage(m);
                }
            }
        }
    }
    
    public void doFriends() {
        for (User u : allUsers) {
            for (String s : friends) {
                if (s.substring(0,s.indexOf(",")).equals(u.getName())) {
                    s = s.substring(s.indexOf(",") + 1);
                    while (s.indexOf(";") > 0) {
                        String name = s.substring(0,s.indexOf(","));
                        for (User f : allUsers) {
                            if (name.equals(f.getName())) {
                                u.addFriend(f);
                            }
                        }
                        s = s.substring(s.indexOf(",") + 1);
                    }
                }
            }
        }
    }
    
    
    
    
    
}//END CLASS
